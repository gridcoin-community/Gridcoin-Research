# Travis caches can be manually removed if necessary. This is one of the very
# few manual operations that is possible with Travis, and it can be done by a
# gridcoin-community GitHub member via the Travis web interface [0].
#
# Travis CI uploads the cache after the script phase of the build [1].
# However, the build is terminated without saving the cache if it takes over
# 50 minutes [2]. Thus, if we spent too much time in early build stages, fail
# with an error and save the cache.
#
# [0] https://travis-ci.org/gridcoin-community/Gridcoin-Research/caches
# [1] https://docs.travis-ci.com/user/caching/#build-phases
# [2] https://docs.travis-ci.com/user/customizing-the-build#build-timeouts

version: ~> 1.0

dist: bionic
os: linux
language: shell
arch: amd64
cache:
  ccache: true
  directories:
    - $TRAVIS_BUILD_DIR/depends/built
    - $TRAVIS_BUILD_DIR/depends/sdk-sources
    - $TRAVIS_BUILD_DIR/ci/scratch/.ccache
    - $TRAVIS_BUILD_DIR/releases/$HOST
stages:
  - test
env:
  global:
    - CI_RETRY_EXE="travis_retry"
    - CACHE_ERR_MSG="Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved."
before_install:
  - set -o errexit; source ./ci/test/00_setup_env.sh
  - set -o errexit; source ./ci/test/03_before_install.sh
install:
  - set -o errexit; source ./ci/test/04_install.sh
before_script:
  # Temporary workaround for https://github.com/bitcoin/bitcoin/issues/16368
  - for i in {1..4}; do echo "$(sleep 500)" ; done &
  - set -o errexit; source ./ci/test/05_before_script.sh # &> "/dev/null"
script:
  - export CONTINUE=1
  - if [ $SECONDS -gt 1200 ]; then export CONTINUE=0; fi  # Likely the depends build took very long
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_a.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
  - if [ $SECONDS -gt 2700 ]; then export CONTINUE=0; fi  # Likely the build took very long
  - if [ $CONTINUE = "1" ]; then set -o errexit; source ./ci/test/06_script_b.sh; else set +o errexit; echo "$CACHE_ERR_MSG"; false; fi
after_script:
  - echo $TRAVIS_COMMIT_RANGE
jobs:
  fast_finish: true
  allow_failures:
    - stage: lint

  include:
    - stage: lint
      name: 'lint'
      env:
      cache: pip
      language: python
      python: '3.5'
      install:
        - set -o errexit; source ./ci/lint/04_install.sh
      before_script:
        - set -o errexit; source ./ci/lint/05_before_script.sh
      script:
        - set -o errexit; source ./ci/lint/06_script.sh

    - stage: test
      name: 'ARM  [GOAL: install]  [buster]'
      arch: arm64  # Can disable QEMU_USER_CMD and run the tests natively without qemu
      env: >-
        FILE_ENV="./ci/test/00_setup_env_arm.sh"
        QEMU_USER_CMD=""

    - stage: test
      name: 'Win32'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_win32.sh"

    - stage: test
      name: 'Win64'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_win64.sh"

    - stage: test
      name: 'i386 Linux  [GOAL: install]  [focal]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_linux_i386.sh"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [GUI]  [focal]  [no depends]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_native.sh"

    - stage: test
      name: 'x86_64 Linux  [GOAL: install]  [GUI]  [xenial]  [no depends]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_native_old.sh"

    - stage: test
      name: 'macOS 10.12  [no tests]'
      env: >-
        FILE_ENV="./ci/test/00_setup_env_mac.sh"

    - stage: test
      name: 'macOS 10.15 native  [GOAL: install]  [GUI]  [no depends]'
      os: osx
      # Use the most recent version:
      # Xcode 12.0, macOS 10.15, SDK 10.16
      # https://docs.travis-ci.com/user/reference/osx/#macos-version
      osx_image: xcode12
      addons:
        homebrew:
          packages:
          - berkeley-db4
          - miniupnpc
          - qrencode
          - ccache
          - libzip
      env: >-
        DANGER_RUN_CI_ON_HOST=true
        CI_USE_APT_INSTALL=no
        FILE_ENV="./ci/test/00_setup_env_mac_host.sh"
