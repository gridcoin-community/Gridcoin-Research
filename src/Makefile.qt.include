# Copyright (c) 2013-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

bin_PROGRAMS += qt/gridcoinresearch
EXTRA_LIBRARIES += qt/libgridcoinqt.a

# bitcoin qt core #
QT_TS = \
  qt/locale/bitcoin_af_ZA.ts \
  qt/locale/bitcoin_ar.ts \
  qt/locale/bitcoin_be_BY.ts \
  qt/locale/bitcoin_bg.ts \
  qt/locale/bitcoin_ca_ES.ts \
  qt/locale/bitcoin_ca.ts \
  qt/locale/bitcoin_ca@valencia.ts \
  qt/locale/bitcoin_cs.ts \
  qt/locale/bitcoin_cy.ts \
  qt/locale/bitcoin_da.ts \
  qt/locale/bitcoin_de.ts \
  qt/locale/bitcoin_el_GR.ts \
  qt/locale/bitcoin_en.ts \
  qt/locale/bitcoin_eo.ts \
  qt/locale/bitcoin_es_CL.ts \
  qt/locale/bitcoin_es_DO.ts \
  qt/locale/bitcoin_es_MX.ts \
  qt/locale/bitcoin_es.ts \
  qt/locale/bitcoin_es_UY.ts \
  qt/locale/bitcoin_et.ts \
  qt/locale/bitcoin_eu_ES.ts \
  qt/locale/bitcoin_fa_IR.ts \
  qt/locale/bitcoin_fa.ts \
  qt/locale/bitcoin_fi.ts \
  qt/locale/bitcoin_fr_CA.ts \
  qt/locale/bitcoin_fr.ts \
  qt/locale/bitcoin_gl.ts \
  qt/locale/bitcoin_he.ts \
  qt/locale/bitcoin_hi_IN.ts \
  qt/locale/bitcoin_hr.ts \
  qt/locale/bitcoin_hu.ts \
  qt/locale/bitcoin_id_ID.ts \
  qt/locale/bitcoin_it.ts \
  qt/locale/bitcoin_ja.ts \
  qt/locale/bitcoin_ka.ts \
  qt/locale/bitcoin_kk_KZ.ts \
  qt/locale/bitcoin_ko_KR.ts \
  qt/locale/bitcoin_ky.ts \
  qt/locale/bitcoin_la.ts \
  qt/locale/bitcoin_lt.ts \
  qt/locale/bitcoin_lv_LV.ts \
  qt/locale/bitcoin_ms_MY.ts \
  qt/locale/bitcoin_nb.ts \
  qt/locale/bitcoin_nl.ts \
  qt/locale/bitcoin_pam.ts \
  qt/locale/bitcoin_pl.ts \
  qt/locale/bitcoin_pt_BR.ts \
  qt/locale/bitcoin_pt_PT.ts \
  qt/locale/bitcoin_ro_RO.ts \
  qt/locale/bitcoin_ru.ts \
  qt/locale/bitcoin_sk.ts \
  qt/locale/bitcoin_sl_SI.ts \
  qt/locale/bitcoin_sq.ts \
  qt/locale/bitcoin_sr.ts \
  qt/locale/bitcoin_sv.ts \
  qt/locale/bitcoin_th_TH.ts \
  qt/locale/bitcoin_tr.ts \
  qt/locale/bitcoin_uk.ts \
  qt/locale/bitcoin_ur_PK.ts \
  qt/locale/bitcoin_vi.ts \
  qt/locale/bitcoin_vi_VN.ts \
  qt/locale/bitcoin_zh_CN.ts \
  qt/locale/bitcoin_zh_TW.ts

QT_FORMS_UI = \
  qt/forms/aboutdialog.ui \
  qt/forms/coincontroldialog.ui \
  qt/forms/diagnosticsdialog.ui \
  qt/forms/optionsdialog.ui \
  qt/forms/rpcconsole.ui \
  qt/forms/signverifymessagedialog.ui \
  qt/forms/addressbookpage.ui \
  qt/forms/editaddressdialog.ui \
  qt/forms/overviewpage.ui \
  qt/forms/sendcoinsdialog.ui \
  qt/forms/transactiondescdialog.ui \
  qt/forms/askpassphrasedialog.ui \
  qt/forms/sendcoinsentry.ui
  
QT_MOC_CPP = \
  qt/moc_aboutdialog.cpp \
  qt/moc_addressbookpage.cpp \
  qt/moc_addresstablemodel.cpp \
  qt/moc_askpassphrasedialog.cpp \
  qt/moc_bitcoinaddressvalidator.cpp \
  qt/moc_bitcoinamountfield.cpp \
  qt/moc_bitcoingui.cpp \
  qt/moc_clicklabel.cpp \
  qt/moc_clientmodel.cpp \
  qt/moc_coincontroldialog.cpp \
  qt/moc_coincontroltreewidget.cpp \
  qt/moc_csvmodelwriter.cpp \
  qt/moc_diagnosticsdialog.cpp \
  qt/moc_editaddressdialog.cpp \
  qt/moc_guiutil.cpp \
  qt/moc_macdockiconhandler.cpp \
  qt/moc_macnotificationhandler.cpp \
  qt/moc_monitoreddatamapper.cpp \
  qt/moc_notificator.cpp \
  qt/moc_optionsdialog.cpp \
  qt/moc_optionsmodel.cpp \
  qt/moc_overviewpage.cpp \
  qt/moc_qvalidatedlineedit.cpp \
  qt/moc_qvaluecombobox.cpp \
  qt/moc_rpcconsole.cpp \
  qt/moc_sendcoinsdialog.cpp \
  qt/moc_sendcoinsentry.cpp \
  qt/moc_signverifymessagedialog.cpp \
  qt/moc_trafficgraphwidget.cpp \
  qt/moc_transactiondesc.cpp \
  qt/moc_transactiondescdialog.cpp \
  qt/moc_transactionfilterproxy.cpp \
  qt/moc_transactiontablemodel.cpp \
  qt/moc_transactionview.cpp \
  qt/moc_votingdialog.cpp \
  qt/moc_walletmodel.cpp

GRIDCOIN_MM = \
  qt/macdockiconhandler.mm \
  qt/macnotificationhandler.mm

QT_MOC = \
  qt/overviewpage.moc \
  qt/rpcconsole.moc \
  qt/bitcoin.moc

QT_QRC_CPP = qt/qrc_bitcoin.cpp
QT_QRC = qt/bitcoin.qrc
QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp
QT_QRC_LOCALE = qt/bitcoin_locale.qrc

GRIDCOINRESEARCH_QT_H = \
  qt/aboutdialog.h \
  qt/addressbookpage.h \
  qt/addresstablemodel.h \
  qt/askpassphrasedialog.h \
  qt/bitcoinaddressvalidator.h \
  qt/bitcoinamountfield.h \
  qt/bitcoingui.h \
  qt/bitcoinunits.h \
  qt/clicklabel.h \
  qt/clientmodel.h \
  qt/coincontroldialog.h \
  qt/coincontroltreewidget.h \
  qt/csvmodelwriter.h \
  qt/diagnosticsdialog.h \
  qt/editaddressdialog.h \
  qt/guiconstants.h \
  qt/guiutil.h \
  qt/macdockiconhandler.h \
  qt/macnotificationhandler.h \
  qt/monitoreddatamapper.h \
  qt/notificator.h \
  qt/optionsdialog.h \
  qt/optionsmodel.h \
  qt/overviewpage.h \
  qt/qtipcserver.h \
  qt/qvalidatedlineedit.h \
  qt/qvaluecombobox.h \
  qt/rpcconsole.h \
  qt/sendcoinsdialog.h \
  qt/sendcoinsentry.h \
  qt/signverifymessagedialog.h \
  qt/trafficgraphwidget.h \
  qt/transactiondesc.h \
  qt/transactiondescdialog.h \
  qt/transactionfilterproxy.h \
  qt/transactionrecord.h \
  qt/transactiontablemodel.h \
  qt/transactionview.h \
  qt/votingdialog.h \
  qt/walletmodel.h \
  qt/winshutdownmonitor.h

GRIDCOINRESEARCH_QT_CPP = \
  qt/aboutdialog.cpp \
  qt/addressbookpage.cpp \
  qt/addresstablemodel.cpp \
  qt/askpassphrasedialog.cpp \
  qt/bitcoinaddressvalidator.cpp \
  qt/bitcoinamountfield.cpp \
  qt/bitcoingui.cpp \
  qt/bitcoinunits.cpp \
  qt/clicklabel.cpp \
  qt/clientmodel.cpp \
  qt/coincontroldialog.cpp \
  qt/coincontroltreewidget.cpp \
  qt/csvmodelwriter.cpp \
  qt/diagnosticsdialog.cpp \
  qt/editaddressdialog.cpp \
  qt/guiutil.cpp \
  qt/monitoreddatamapper.cpp \
  qt/notificator.cpp \
  qt/optionsdialog.cpp \
  qt/optionsmodel.cpp \
  qt/overviewpage.cpp \
  qt/qtipcserver.cpp \
  qt/qvalidatedlineedit.cpp \
  qt/qvaluecombobox.cpp \
  qt/rpcconsole.cpp \
  qt/sendcoinsdialog.cpp \
  qt/sendcoinsentry.cpp \
  qt/signverifymessagedialog.cpp \
  qt/trafficgraphwidget.cpp \
  qt/transactiondesc.cpp \
  qt/transactiondescdialog.cpp \
  qt/transactionfilterproxy.cpp \
  qt/transactionrecord.cpp \
  qt/transactiontablemodel.cpp \
  qt/transactionview.cpp \
  qt/votingdialog.cpp \
  qt/walletmodel.cpp \
  qt/winshutdownmonitor.cpp

RES_ICONS = \
  qt/res/icons/add.png \
  qt/res/icons/gridcoin.ico \
  qt/res/icons/bitcoin_testnet.ico \
  qt/res/icons/block.png \
  qt/res/icons/chat.png \
  qt/res/icons/clock1.png \
  qt/res/icons/clock2.png \
  qt/res/icons/clock3.png \
  qt/res/icons/clock4.png \
  qt/res/icons/clock5.png \
  qt/res/icons/configure.png \
  qt/res/icons/connect0_16.png \
  qt/res/icons/connect1_16.png \
  qt/res/icons/connect2_16.png \
  qt/res/icons/connect3_16.png \
  qt/res/icons/connect4_16.png \
  qt/res/icons/debugwindow.png \
  qt/res/icons/edit.png \
  qt/res/icons/editcopy.png \
  qt/res/icons/editpaste.png \
  qt/res/icons/ex.png \
  qt/res/icons/export.png \
  qt/res/icons/filesave.png \
  qt/res/icons/gold_cpumined.gif \
  qt/res/icons/key.png \
  qt/res/icons/overview2.png \
  qt/res/icons/qrcode.png \
  qt/res/icons/quit.png \
  qt/res/icons/remove.png \
  qt/res/icons/rsz_chat.png \
  qt/res/icons/staking_off.png \
  qt/res/icons/staking_on.png \
  qt/res/icons/statistics.png \
  qt/res/icons/synced.png \
  qt/res/icons/toolbar.png \
  qt/res/icons/transaction0.png \
  qt/res/icons/transaction2.png \
  qt/res/icons/transaction_conflicted.png \
  qt/res/icons/tx2.png \
  qt/res/icons/2tx_cpumined.png \
  qt/res/icons/tx_minedoie_WOEI3ooIzGHI.png \
  qt/res/icons/tx_mined.old.png \
  qt/res/icons/www.png \
  qt/res/icons/wwww.png \
  qt/res/icons/tx_inout.svg \
  qt/res/icons/tx_input.svg \
  qt/res/icons/tx_mined.svg \
  qt/res/icons/tx_output.svg \
  qt/res/icons/tx_por.svg \
  qt/res/icons/icons_native/overview.svg \
  qt/res/icons/icons_light/overview.svg \
  qt/res/icons/icons_dark/overview.svg \
  qt/res/icons/icons_native/Voting.svg \
  qt/res/icons/icons_native/address-book.svg \
  qt/res/icons/icons_native/lock_closed.svg \
  qt/res/icons/icons_native/lock_open.svg \
  qt/res/icons/icons_native/receive.svg \
  qt/res/icons/icons_native/send.svg \
  qt/res/icons/icons_light/Voting.svg \
  qt/res/icons/icons_light/address-book.svg \
  qt/res/icons/icons_light/lock_closed.svg \
  qt/res/icons/icons_light/lock_open.svg \
  qt/res/icons/icons_light/receive.svg \
  qt/res/icons/icons_light/send.svg \
  qt/res/icons/icons_dark/Voting.svg \
  qt/res/icons/icons_dark/address-book.svg \
  qt/res/icons/icons_dark/lock_closed.svg \
  qt/res/icons/icons_dark/lock_open.svg \
  qt/res/icons/icons_dark/receive.svg \
  qt/res/icons/icons_dark/send.svg \
  qt/res/icons/icons_dark/transactions.svg \
  qt/res/icons/icons_light/transactions.svg \
  qt/res/icons/icons_native/transactions.svg

RES_IMAGES = \
  qt/res/images/splash3.png \
  qt/res/images/boinc_logo.svg \
  qt/res/images/about.svg \
  qt/res/images/gridcoin_horizontal.svg \
  qt/res/images/boinc_logo_white.svg \
  qt/res/images/gridcoin.svg \
  qt/res/images/about_light.svg

RES_MOVIES = qt/res/movies/update_spinner.gif

RES_STYLESHEETS = \
  qt/res/stylesheets/light_stylesheet.qss \
  qt/res/stylesheets/native_stylesheet.qss \
  qt/res/stylesheets/dark_stylesheet.qss


GRIDCOIN_RC = qt/res/gridcoinresearch.rc

if USE_QRCODE
GRIDCOINRESEARCH_QT_CPP += qt/qrcodedialog.cpp
QT_MOC_CPP += qt/moc_qrcodedialog.cpp
GRIDCOINRESEARCH_QT_H += qt/qrcodedialog.h
QT_FORMS_UI += qt/forms/qrcodedialog.ui
endif


GRIDCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \
  -I$(builddir)/qt/forms

qt_libgridcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(GRIDCOIN_INCLUDES) $(GRIDCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)
qt_libgridcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

qt_libgridcoinqt_a_SOURCES = $(GRIDCOINRESEARCH_QT_CPP) $(GRIDCOINRESEARCH_QT_H) $(QT_FORMS_UI) \
  $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(RES_STYLESHEETS)

if TARGET_WINDOWS
qt_libgridcoinqt_a_SOURCES += $(GRIDCOIN_CORE_H) $(GRIDCOIN_CORE_CPP) neuralnet.cpp
qt_libgridcoinqt_a_CXXFLAGS += -DUNICODE
endif

nodist_qt_libgridcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \
  $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)

# forms/foo.h -> forms/ui_foo.h
QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:.ui=.h))))

# Most files will depend on the forms and moc files as includes. Generate them
# before anything else.
$(QT_MOC): $(QT_FORMS_H)
$(qt_libgridcoinqt_a_OBJECTS) $(qt_gridcoinresearch_OBJECTS) : | $(QT_MOC)

#Generating these with a half-written protobuf header leads to wacky results.
#This makes sure it's done.

# gridcoin-qt binary #
qt_gridcoinresearch_CPPFLAGS = $(AM_CPPFLAGS) $(GRIDCOIN_INCLUDES) $(GRIDCOIN_QT_INCLUDES) \
  $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)
qt_gridcoinresearch_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)

qt_gridcoinresearch_SOURCES = qt/bitcoin.cpp
if TARGET_DARWIN
  qt_gridcoinresearch_SOURCES += $(GRIDCOIN_MM)
endif
qt_gridcoinresearch_LDADD = qt/libgridcoinqt.a
if TARGET_WINDOWS
  qt_gridcoinresearch_SOURCES += $(GRIDCOIN_RC)
else
  qt_gridcoinresearch_LDADD += $(LIBGRIDCOIN_UTIL)
endif
qt_gridcoinresearch_LDADD += $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBGRIDCOIN_CRYPTO) $(LIBMEMENV) \
  $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\
  $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)
qt_gridcoinresearch_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
qt_gridcoinresearch_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX


#locale/foo.ts -> locale/foo.qm
QT_QM=$(QT_TS:.ts=.qm)

SECONDARY: $(QT_QM)

# translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(GRIDCOIN_MM)
# 	@test -n $(LUPDATE) || echo "lupdate is required for updating translations"
# 	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/bitcoin_en.ts

$(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)
	@test -f $(RCC)
	@cp -f $< $(@D)/temp_$(<F)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/temp_$(<F) | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@
	@rm $(@D)/temp_$(<F)

$(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(RES_STYLESHEETS) $(PROTOBUF_H)
	@test -f $(RCC)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

CLEAN_QT = $(nodist_qt_libgridcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno

CLEANFILES += $(CLEAN_QT)

gridcoinresearch_clean: FORCE
	rm -f $(CLEAN_QT) $(qt_gridcoinresearch_OBJECTS) qt/gridcoinresearch$(EXEEXT)

gridcoinresearch: 
	@echo "$(ZIP_LIBS)"
	qt/gridcoinresearch$(EXEEXT)

ui_%.h: %.ui
	@test -f $(UIC)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(UIC) -o $@ $< || (echo "Error creating $@"; false)

%.moc: %.cpp
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

moc_%.cpp: %.h
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(MOC) $(DEFAULT_INCLUDES) $(QT_INCLUDES) $(MOC_DEFS) $< | \
	  $(SED) -e '/^\*\*.*Created:/d' -e '/^\*\*.*by:/d' > $@

%.qm: %.ts
	@test -f $(LRELEASE)
	@$(MKDIR_P) $(@D)
	$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LRELEASE) -silent $< -qm $@
